- name: Set up Arch Linux environment for Marius
  hosts: localhost
  become: yes
  vars:
    user_name: "marius"
    group_name: "wheel"
    workspace_dir: "/home/{{ user_name }}/workspace"
    config_dir: "/home/{{ user_name }}/.config"
    bin_dir: "/usr/local/bin"
    common_packages:
      - autoconf
      - bash-completion
      - btop
      - clang
      - conky
      - curl
      - dmenu
      - docker
      - docker-compose
      - fzf
      - git
      - i3
      - i3lock
      - kitty
      - neovim
      - nodejs
      - pre-commit
      - python3
      - ripgrep
      - rofi
      - tig
      - tmux
      - unzip
      - xpdf
      - xsel
    yay_packages:
      - aws-cli-v2-bin
      - brave-bin
      - kind
      - kubecolor
      - slack-desktop
      - terraform-docs-bin
      - tfenv
    arch_packages:
      - autopep8
      - bash-language-server
      - eza
      - fastfetch
      - fd
      - go
      - kubectl
      - imagemagick
      - less
      - lua51
      - lua-language-server
      - noto-fonts
      - noto-fonts-emoji
      - openssh
      - prettier
      - python-black
      - python-pynvim
      - rustup
      - stylua
      - tree-sitter
      - ttf-firacode-nerd
      - ttf-sourcecodepro-nerd
      - yazi
    config_files:
      - {
          src: "{{ workspace_dir }}/dots/.LESS_TERMCAP",
          dest: "/home/{{ user_name }}/.LESS_TERMCAP",
          mode: "0644",
        }
      - {
          src: "{{ workspace_dir }}/dots/.bashrc",
          dest: "/home/{{ user_name }}/.bashrc",
          mode: "0644",
        }
      - {
          src: "{{ workspace_dir }}/dots/.conkyrc",
          dest: "/home/{{ user_name }}/.conkyrc",
          mode: "0644",
        }
      - {
          src: "{{ workspace_dir }}/dots/conky-i3bar.sh",
          dest: "{{ bin_dir }}/conky-i3bar.sh",
          mode: "0755",
        }
      - {
          src: "{{ workspace_dir }}/dots/i3-keyboard-layout",
          dest: "{{ bin_dir }}/i3-keyboard-layout",
          mode: "0755",
        }
      - {
          src: "{{ workspace_dir }}/dots/i3config",
          dest: "{{ config_dir }}/i3/config",
          mode: "0644",
        }
      - {
          src: "{{ workspace_dir }}/dots/kitty.conf",
          dest: "{{ config_dir }}/kitty/kitty.conf",
          mode: "0644",
        }
      - {
          src: "{{ workspace_dir }}/dots/rofi-computer",
          dest: "{{ bin_dir }}/rofi-computer",
          mode: "0755",
        }
      - {
          src: "{{ workspace_dir }}/dots/rofi.config",
          dest: "{{ config_dir }}/rofi/config",
          mode: "0644",
        }
  tasks:
    - name: Check the distribution
      debug:
        msg: "Running distro: {{ ansible_facts['distribution'] }}"
    - name: Clone or update the dots repository
      git:
        repo: https://github.com/mariusmagureanu/dots
        dest: "{{ workspace_dir }}/dots"
        update: yes
        version: master
    - name: Ensure required directories exist
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "0755"
      loop:
        - "{{ workspace_dir }}"
        - "{{ config_dir }}/kitty"
        - "{{ config_dir }}/rofi"
        - "{{ config_dir }}/i3"
        - "{{ bin_dir }}"
    - name: Install packages on Fedora or Debian
      package:
        name: "{{ common_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['distribution'] != 'Archlinux'
    - name: Install packages on Arch Linux
      pacman:
        name: "{{ common_packages + arch_packages }}"
        state: present
        update_cache: yes
      when: ansible_facts['distribution'] == 'Archlinux'
    - name: Clone or update the yay repository
      git:
        repo: https://aur.archlinux.org/yay.git
        dest: "{{ workspace_dir }}/yay"
        update: yes
      become: yes
      become_user: "{{ user_name }}"
      when: ansible_facts['distribution'] == 'Archlinux'
    - name: Prepare yay PKGBUILD
      command: "makepkg -sfc --noconfirm"
      become_user: "{{ user_name }}"
      args:
        chdir: "{{ workspace_dir }}/yay"
      when: ansible_facts['distribution'] == 'Archlinux'
    - name: Install YAY
      shell: "pacman -U *.zst --noconfirm"
      become: yes
      args:
        chdir: "{{ workspace_dir }}/yay"
      when: ansible_facts['distribution'] == 'Archlinux'
    - name: Install additional YAY packages
      command: yay -S --noconfirm "{{ item }}"
      become_user: "{{ user_name }}"
      become: yes
      loop: "{{ yay_packages }}"
      ignore_errors: yes
      when: ansible_facts['distribution'] == 'Archlinux'
    - name: Create or update the ~/.config/nvim symlink
      file:
        src: "{{ workspace_dir }}/dots/nvim-lua"
        dest: "{{ config_dir }}/nvim"
        state: link
    - name: Copy configuration and script files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ user_name }}"
        group: "{{ group_name }}"
        mode: "{{ item.mode }}"
      loop: "{{ config_files }}"
    - name: Install rust
      command: rustup default stable
      when: ansible_facts['distribution'] == 'Archlinux'
