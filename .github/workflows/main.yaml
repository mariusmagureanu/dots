name: Install Dots
on:
  push:
    branches:
      - gha
  pull_request:
jobs:
  test-dots:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        container: [archlinux, 'debian:latest', 'fedora:latest']
        include:
          - os: ubuntu-latest
            container: archlinux
          - os: ubuntu-latest
            container: debian:latest
          - os: ubuntu-latest
            container: fedora:latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Pull Container Image
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker pull ${{ matrix.container }}
      - name: Start Container
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker run -d --name dots-container -v ${{ github.workspace }}:/workspace ${{ matrix.container }} sleep 600
      - name: Install Ansible in Container
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker exec dots-container bash -c "
          if command -v pacman > /dev/null; then
            pacman -Sy --noconfirm ansible sudo git base-devel fakeroot debugedit go;
          elif command -v apt-get > /dev/null; then
            apt-get update && apt-get install -y ansible sudo go;
          elif command -v dnf > /dev/null; then
            dnf install -y ansible sudo go;
          fi
          "
      - name: Create User 'marius' in Container
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker exec dots-container bash -c "
          useradd -m -G wheel marius
          "
      - name: Run Ansible Playbook in Container
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          echo $PATH
          docker exec dots-container ansible-playbook workspace/hecker.yml
      - name: Stop and Remove Container
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          docker stop dots-container && docker rm dots-container
